name: AI Test Generation & Docker Build

on:
  pull_request:       # runs on PR creation / new commits to the PR
    branches: ["main"]

permissions:
  contents: write
  packages: write     # push to ghcr.io
  pull-requests: write

jobs:
  # ────────────────────────────────────────────────────────────────
  generate_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install pytest openai

      - name: Generate AI unit tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python .github/scripts/generate_tests.py

      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q

      - name: Create PR with generated tests
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: add AI-generated tests [ci skip]"
          branch: ai-tests-${{ github.sha }}
          title: "Add AI-generated unit tests"
          body: "This PR adds unit tests generated by OpenAI for the latest changes."
          base: main

  # ────────────────────────────────────────────────────────────────
  docker:
    needs: generate_and_test         # only build if tests passed
    if: github.event.pull_request.merged == false   # run *during* PR life‑cycle
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU (multi‑arch, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # two tags: unique SHA & a PR‑scoped tag
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:pr-${{ github.event.pull_request.number }}
